Expanded(
                          child: ListView.separated(
                        scrollDirection: Axis.vertical,
                        shrinkWrap: true,
                        itemCount: listProvider.groupList.groups.length,
                        itemBuilder: (context, index) {
                      String _presenceStatus = "";
                      int _count = 0;
                      if (listProvider.groupList.groups[index].participants
                              .length ==
                          1) {
                        if (listProvider.presenceList.indexOf(listProvider
                                .groupList
                                .groups[index]
                                .participants[0]
                                .ref_id) !=
                            -1)
                          _presenceStatus = "online";
                        else
                          _presenceStatus = "offline";
                      } else if (listProvider.groupList.groups[index]
                              .participants.length ==
                          2) {
                        listProvider.groupList.groups[index].participants
                            .forEach((element) {
                          if (listProvider.presenceList
                                  .indexOf(element.ref_id) !=
                              -1) _count++;
                        });
                        if (_count < 2)
                          _presenceStatus = "offline";
                        else
                          _presenceStatus = "online";
                      } else {
                        listProvider.groupList.groups[index].participants
                            .forEach((element) {
                          if (listProvider.presenceList
                                  .indexOf(element.ref_id) !=
                              -1) _count++;
                        });
                        _presenceStatus = "(" +
                            _count.toString() +
                            "/" +
                            listProvider
                                .groupList.groups[index].participants.length
                                .toString() +
                            ") online";
                      }

                          return Padding(
                            padding: const EdgeInsets.only(left: 5, right: 5),
                            child: Card(
                              shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(10)),
                              child: Padding(
                                padding: EdgeInsets.only(
                                  left: 10,
                                ),
                                child: Container(
                                  child: ListTile(
                                    onTap: () {
                                      listProvider.setCountZero(index);
                                      Navigator.pushNamed(
                                          context, "/chatScreen",
                                          arguments: {
                                            "index": index,
                                            "publishMessage": publishMessage,
                                            "groupListProvider":
                                                groupListProvider
                                          });

                                      handleSeenStatus(index);
                                    },
                                    leading: Icon(
                                      Icons.person,
                                      size: 30,
                                    ),
                                    title:
                                        //name of user if participants count is 1
                                        listProvider.groupList.groups[index]
                                                    .participants.length ==
                                                1
                                            ? Padding(
                                                padding: const EdgeInsets.only(
                                                    top: 20),
                                                child: Text(
                                                    "${listProvider.groupList.groups[index].participants[0].full_name}"),
                                              )
                                            : //name of user if participants count is 2
                                            listProvider.groupList.groups[index]
                                                        .participants.length ==
                                                    2
                                                ? Padding(
                                                    padding:
                                                        const EdgeInsets.only(
                                                            top: 20),
                                                    child: Text(
                                                        "${listProvider.groupList.groups[index].participants[listProvider.groupList.groups[index].participants.indexWhere((element) => element.ref_id != authProvider.getUser.ref_id)].full_name}"),
                                                  )
                                                :
                                                //name of user if participants count is more than 2
                                                Padding(
                                                    padding:
                                                        const EdgeInsets.only(
                                                            top: 20),
                                                    child: Text(
                                                        "${listProvider.groupList.groups[index].group_title}"),
                                                  ),

                                    //status for typing
                                    // subtitle: Text(""),
                                    subtitle: listProvider
                                                    .groupList
                                                    .groups[index]
                                                    .typingstatus ==
                                                null ||
                                            listProvider.groupList.groups[index]
                                                    .typingstatus ==
                                                false
                                        ? Text("")
                                        : Text(
                                            "typing...",
                                            style: TextStyle(fontSize: 10),
                                          ),
                                    trailing: listProvider.groupList
                                                    .groups[index].counter ==
                                                null ||
                                            listProvider.groupList.groups[index]
                                                    .counter == 0
                                        ? //if count is zero
                                        Text(
                                            _presenceStatus,
                                            style: TextStyle(
                                                color:
                                                    _presenceStatus != "offline"
                                                        ? Colors.green
                                                        : Colors.red),
                                          )
                                        :
                                        // if count is not zero
                                        Padding(
                                            padding: EdgeInsets.all(1),
                                            child: Column(
                                              children: [
                                                Text(
                                                  _presenceStatus,
                                                  style: TextStyle(
                                                      color: _presenceStatus !=
                                                              "offline"
                                                          ? Colors.green
                                                          : Colors.red),
                                                ),
                                                Text(
                                                  "${listProvider.groupList.groups[index].counter}",
                                                  style: TextStyle(
                                                      color: Colors.blue,
                                                      fontSize: 16,
                                                      fontWeight:
                                                          FontWeight.bold),
                                                ),
                                              ],
                                            )),
                                  ),
                                ),
                              ),
                            ),
                          );
                        },
                        separatorBuilder: (BuildContext context, int index) {
                          return SizedBox(
                            height: 1,
                          );
                        },
                      )),